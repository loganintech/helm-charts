apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "terraria.fullname" . }}
  labels:
{{ include "terraria.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "terraria.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "terraria.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      initContainers:
        - name: init-tshockconfig
          image: busybox:1.28
          command: ['sh']
          args:
            - -c
            - |
              if [ ! -f /config/config.json ]; then echo -e '{{- if .Values.terraria.tshockSettings }}{{ toJson .Values.terraria.tshockSettings }}{{- end }}' > /config/config.json; fi;
              chmod 644 /config/config.json
          volumeMounts:
          - name: terraria-config
            mountPath: /config
        - name: init-serverconfig
          image: busybox:1.28
          command: ['sh']
          args:
            - -c
            - |
              if [ ! -f /config/config.txt ]; then
                echo '' > /config/config.txt
              {{- if .Values.terraria.extraServerSettings }}
              {{- range $key, $value := .Values.terraria.extraServerSettings }}
                echo '{{ $key }}={{ $value }}' >> /config/config.txt
              {{- end }}
              {{- end }}
                echo 'autocreate={{ include "terraria.worldsize" . }}' >> /config/config.txt
                echo 'difficulty={{ include "terraria.difficulty" . }}' >> /config/config.txt
                echo 'worldname={{ .Values.terraria.serverSettings.worldname }}' >> /config/config.txt
                echo 'maxplayers={{ .Values.terraria.serverSettings.maxplayers }}' >> /config/config.txt
                echo 'secure={{ .Values.terraria.serverSettings.secure }}' >> /config/config.txt
                echo 'language={{ .Values.terraria.serverSettings.language }}' >> /config/config.txt
                echo 'npcstream={{ .Values.terraria.serverSettings.npcstream }}' >> /config/config.txt
                echo 'priority={{ .Values.terraria.serverSettings.priority }}' >> /config/config.txt
              fi
              chmod 644 /config/config.txt
          volumeMounts:
          - name: terraria-config
            mountPath: /config
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ template "terraria.serviceAccountName" . }}
      {{- if .Values.podSecurityContext }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          env:
            - name: CONFIG_PATH
              value: /config
            {{- if .Values.terraria.env }}
            {{- toYaml .Values.terraria.env | nindent 12 }}
            {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          tty: {{ .Values.terraria.tty }}
          stdin: {{ .Values.terraria.stdin }}
          args:
            {{- if .Values.terraria.args }}
            {{- toYaml .Values.terraria.args | nindent 12 }}
            {{- end }}
          ports:
            - name: server
              containerPort: 7777
              protocol: TCP
            - name: http
              containerPort: 7878
              protocol: TCP
            {{- range .Values.terraria.extraPorts }}
            {{- if .service.enabled }}
            - name: {{ .name }}
              containerPort: {{ .containerPort }}
              {{- if .protocol }}
              protocol: {{ .protocol }}
              {{- else }}
              protocol: TCP
              {{- end }}
            {{- end }}
            {{- end }}
          volumeMounts:
          - name: terraria-worlds
            mountPath: /root/.local/share/Terraria/Worlds
          - name: terraria-config
            mountPath: /config
          - name: tshock-plugins
            mountPath: /tshock/ServerPlugins
          - name: tshock-logs
            mountPath: /tshock/logs
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: terraria-worlds
      {{- if .Values.persistence.worlds.enabled }}
        persistentVolumeClaim:
          claimName: {{ template "terraria.fullname" . }}-worlds
      {{- else }}
        emptyDir: {}
      {{- end }}
      - name: terraria-config
      {{- if .Values.persistence.config.enabled }}
        persistentVolumeClaim:
          claimName: {{ template "terraria.fullname" .  }}-config
      {{- else }}
        emptyDir: {}
      {{- end }}
      - name: tshock-plugins
      {{- if .Values.persistence.plugins.enabled }}
        persistentVolumeClaim:
          claimName: {{ template "terraria.fullname" .  }}-plugins
      {{- else }}
        emptyDir: {}
      {{- end }}
      - name: tshock-logs
      {{- if .Values.persistence.logs.enabled }}
        persistentVolumeClaim:
          claimName: {{ template "terraria.fullname" .  }}-logs
      {{- else }}
        emptyDir: {}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
