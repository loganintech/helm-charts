apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "palworld.fullname" . }}
  labels:
{{ include "palworld.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "palworld.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "palworld.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          tty: {{ .Values.palworld.tty }}
          stdin: {{ .Values.palworld.stdin }}
          env:
            - name: SERVER_NAME
              value: {{ .Values.palworld.config.serverName }}
            - name: PORT
              value: {{ .Values.palworld.config.port | quote }}
            - name: COMMUNITY
              value: {{ .Values.palworld.config.communityServer | quote }}
            - name: PLAYERS
              value: {{ .Values.palworld.config.maxPlayers | quote }}
            - name: MULTITHREADING
              value: {{ .Values.palworld.config.multiThreading | quote }}
            - name: UPDATE_ON_BOOT
              value: {{ .Values.palworld.config.updateOnBoot | quote }}
            - name: RCON_ENABLED
              value: {{ .Values.rcon.enabled | quote }}
            - name: RCON_PORT
              value: {{ .Values.rcon.port | quote }}
            - name: PUID
              value: {{ .Values.palworld.config.puid | quote }}
            - name: PGID
              value: {{ .Values.palworld.config.pgid | quote }}
            {{- if .Values.palworld.config.adminPassword }}
            - name: ADMIN_PASSWORD
              value: {{ .Values.palworld.config.adminPassword | quote }}
            {{- end }}
            {{- if .Values.palworld.config.serverPassword }}
            - name: SERVER_PASSWORD
              value: {{ .Values.palworld.config.serverPassword | quote }}
            {{- end }}
            {{- if .Values.palworld.config.publicPort }}
            - name: PUBLIC_PORT
              value: {{ .Values.palworld.config.publicPort | quote }}
            {{- end }}
{{/*            {{- if .Values.palworld.env }}*/}}
{{/*            {{- toYaml .Values.palworld.env | nindent 12 }}*/}}
{{/*            {{- end }}*/}}
          args:
            {{- if .Values.palworld.args }}
            {{- toYaml .Values.palworld.args | nindent 12 }}
            {{- else }}
            {{- end }}
          ports:
            - name: server
              containerPort: {{ .Values.palworld.config.port }}
              protocol: UDP
            - name: rcon
              containerPort: {{ .Values.rcon.port }}
              protocol: TCP
            - name: steamquery
              containerPort: 27015 # Unfortunately, this cannot be changed
              protocol: TCP
          volumeMounts:
          - name: game
            mountPath: /palworld
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
      - name: game
      {{- if .Values.persistence.game.enabled }}
        persistentVolumeClaim:
          claimName: {{ template "palworld.fullname" .  }}-game
      {{- else }}
        emptyDir: {}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
